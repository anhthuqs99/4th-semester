PUBLIC output_X ;public :заставляет компоновщик соединить все сегменты с одинаковым именем
				;извещающего ассемблер о том, что данное символическое имя доступно другим программам. 
EXTRN X: byte ; extern: Указывает, что идентификатор определен в другом модуле.

DS2 SEGMENT AT 0b800h; AT: располагает сегмент по абсолютному адресу параграфа 
;(параграф — объем памяти, кратный 16, поэтому последняя шестнадцатеричная цифра адреса параграфа равна 0). 
;Абсолютный адрес параграфа задается выражением хххx. Компоновщик располагает сегмент по заданному адресу памяти 
;(это можно использовать, например, для доступа к видеопамяти или области ПЗУ), учитывая атрибут комбинирования. 
;Физически это означает, что сегмент при загрузке в память будет расположен, начиная с этого абсолютного адреса параграфа,
;но для доступа к нему в соответствующий сегментный регистр должно быть загружено заданное в атрибуте значение. 
;Все метки и адреса в определенном таким образом сегменте отсчитываются относительно заданного абсолютного адреса;
	CA LABEL byte; byte: Сегмент может начинаться с любого адреса памяти
	ORG 80 * 2 * 2 + 2 * 2  ;ORG используется для установки счетчика местоположения ассемблера
	SYMB LABEL word ; word: сегмент начинается по адресу, кратному двум
DS2 ENDS

CSEG SEGMENT PARA PUBLIC 'CODE'
	assume CS:CSEG, ES:DS2
;assume:
;Является инструкцией компилятору, указывающей, какой сегментный регистр с каким
;сегментом будет связан во время работы программы. Используется для контроля
;правильности обращения к переменным и автоматического определения сегментного
;префикса в машинных командах работы с памятью.

output_X proc near
;Короткий (short) - в пределах адресов -128..+127 от текущего значения IP (1 байт).
;Ближний (near) - в пределах того же сегмента (2 байта).
;Дальний (far) - на произвольный адрес (4 байта).
	mov ax, DS2
	mov es, ax
	mov ah, 10
	mov al, X
	mov symb, ax
	ret
;RET возращает управление по адресу из стека.
output_X endp
;Для описания последовательности команд в виде процедуры в языке ассемблера используются две директивы: PROC и ENDP.
CSEG ENDS
END